<section>
      <div class="container-fluid ccourse_con">
        <div class="container">
          <div class="row">
            <div class="page_heading ccourse_heading">COURSES</div>
            <h1>C Course</h1><hr>
            <h4 class="align_justify">
                C (/ˈsiː/, as in the letter c) is a general-purpose, imperative computer programming language, supporting structured programming, lexical variable scope and recursion, while a static type system prevents many unintended operations.<br>
                C is used a lot in embedded hardware programming where resources are scarce. Linux kernel is written in C because, according to Linus Torvalds, C++ is a horrible language.

            </h4>
            <h3><b>6 Weeks/Month Course</b></h3><hr>
            <h5>
            <b>GETTING STARTED</b>
            <br>•What is C?
            <br>•Background
            <br>•Sample Program
            <br>•Components of a C Program
            <br>•Examples
            <br>•Data Types
            <br>•Variables
            <br>•Naming Conventions for C Variables
            <br>•Printing and Initializing Variables
            <br>•Array Examples
            <br>•Compiling and Executing a C Program<hr>
            <b>FUNCTIONS AND OPERATORS</b>
            <br>•Functions
            <br>•Invoking Functions
            <br>•Elementary Operators
            <br>•The Assignment Operators
            <br>•Number of Operands
            <br>•The Conditional Operator
            <br>•Increment and Decrement Operators<hr>
            <b>CONTROL FLOW CONSTRUCTS</b>
            <br>•Examples of Expressions
            <br>•if
            <br>•if-else
            <br>•while
            <br>•for
            <br>•Endless Loops
            <br>•do while
            <br>•break and continue
            <br>•switch
            <br>•else if<hr>
            <b>THE C PREPROCESSOR</b>
            <br>•#define
            <br>•Preprocessor Macros
            <br>•#include
            <br>•Conditional Compilation
            <br>•#ifndef<hr>
            <b>SIMPLE I/O</b>
            <br>•Character I/O
            <br>•End of File
            <br>•Simple I/O Examples
            <br>•Simple I/O Redirection
            <br>•I/O with Character Arrays
            <br>• MORE ON FUNCTIONS
            <br>•Introduction
            <br>•Function Declarations
            <br>•Returning a Value or Not
            <br>•Function Prototypes
            <br>•Arguments and Parameters
            <br>•Organization of C Source Files
            <br>•Extended Example
            <br>•The getaline Function
            <br>•The strcmp Function
            <br>•The check Function
            <br>•The atoi Function
            <br>•The average Function<hr>
            <b>STRINGS</b>
            <br>•Fundamental Concepts
            <br>•Aggregate Operations
            <br>•String Functions
            <br>•String Functions Example
            <br>• ARRAYS
            <br>•Array Dimensions
            <br>•An Array as an Argument to a Function
            <br>•Two-Dimensional Array Example
            <br>•String Arrays<hr>
            <b>SEPARATE COMPILATION</b>
            <br>•Compiling Over Several Files
            <br>•Function Scope
            <br>•File Scope
            <br>•Program Scope
            <br>•Local static
            <br>•register and extern
            <br>•Object Files
            <br>•Libraries
            <br>•The C Loader
            <br>•Header Files<hr>
            <b>POINTERS </b>
            <br>•Fundamental Concepts
            <br>•Pointer Operators and Operations
            <br>•Changing an Argument with a Function Call
            <br>•Pointer Arithmetic
            <br>•Array Traversal
            <br>•String Functions with Pointers
            <br>•Pointer Difference
            <br>•Prototypes for String Functions
            <br>•Relationship Between an Array and a Pointer
            <br>•The Pointer Notation *p++<hr>
            <b>STRUCTURES</b>
            <br>•Fundamental Concepts
            <br>•Describing a Structure
            <br>•Creating Structures
            <br>•Operations on Structures
            <br>•Functions Returning Structures
            <br>•Passing Structures to Functions
            <br>•Pointers to Structures
            <br>•Array of Structures
            <br>•Functions Returning a Pointer to a Structure<hr>
            <b>STRUCTURE RELATED ITEMS</b>
            <br>•typedef - New Name for an Existing Type
            <br>•Bit Fields
            <br>•unions
            <br>•Non-Homogeneous Arrays
            <br>•Enumerations<hr>
            <b>FILE I/O</b>
            <br>•System Calls
            <br>•Library Calls
            <br>•Opening Disk Files
            <br>•fopen
            <br>•I/O Library Functions
            <br>•Copying a File<hr>
            <br>•Character Input
            <br>•Line Input
            <br>•scanf
            <br>•fprintf
            <br>•fclose
            <br>•Servicing Errors - errno.h
            <br>•feof<hr>
            <b>INFORMATION ABOUT FILES</b>
            <br>•The stat Function
            <br>•File Existence
            <br>•Telling Time - time and ctime
            <br>•Telling Time – localtime<hr>



            </h5>
          </div>
          <div class="row align_justify">
            <%= link_to "Register", new_student_enrollment_path, class: "winter_btn backorange" %> 
          </div>
        </div>
      </div>
    </section>